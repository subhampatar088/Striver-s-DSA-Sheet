class Solution {
    public boolean isBipartite(int[][] graph) {
        int[] color = new int[graph.length];
        Arrays.fill(color,-1);
        for(int i=0;i<graph.length;i++){
            if(color[i] == -1){
                if(checkBipartite(graph,i,color) == false){
                    return false;
                }
            }
        }
        return true;
    }
    boolean checkBipartite(int[][] graph,int s,int[] color){
        Queue<Integer> q = new ArrayDeque<>();
        q.offer(s);
        color[s] = 1;
        while(q.size()>0){
            int curr = q.poll();
            for(int n : graph[curr]){
                if(color[n] == -1){
                    color[n] = 1 - color[curr];
                    q.offer(n);
                }
                else if(color[n] == color[curr]){
                    return false;
                }
            }
        }
        return true;
    }
}
