class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int m = matrix.length;
        int n = matrix[0].length;
        int row = findRow(matrix,target,m,n);
        if(row!=-1){
            if(matrix[row][n-1]==target) return true;
            return searchElement(matrix,target,row,m,n);
        }
        return false;
    }
    static int findRow(int[][] matrix, int target,int m,int n){
        int row = -1;
        int s = 0, e = m-1;
        while(s<=e){
            int mid = (s+e)/2;
            if(matrix[mid][n-1]==target){
                return mid;
            }
            else if(matrix[mid][n-1]<target){
                s = mid+1;
            }
            else{
                row = mid;
                e = mid-1;
            }
        }
        return row;
    }
    static boolean searchElement(int[][] matrix,int target,int row,int m,int n){
            int s = 0, e = n-1;
            while(s<=e){
                int mid = (s+e)/2;
                if(matrix[row][mid] == target){
                    return true;
                }
                else if(matrix[row][mid] < target){
                    s = mid+1;
                }
                else{
                    e = mid-1;
                }
            }
        return false;
    }
}
