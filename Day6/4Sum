class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();
        int i=0;
        while(i<nums.length){
            int j=i+1;
            while(j<nums.length){
                int l = j+1, r = nums.length-1;
                long t = 1l*target-1l*nums[i]-1l*nums[j];
                while(l<r){
                    long sum = 1l*nums[l] + 1*nums[r];
                    if(sum == t){
                        List<Integer> temp = new ArrayList<>();
                        temp.add(nums[i]);
                        temp.add(nums[j]);
                        temp.add(nums[l]);
                        temp.add(nums[r]);
                        ans.add(temp);
                        l++; r--;
                        while(l<r && nums[l]==nums[l-1]){
                            l++;
                        }
                        while(r>l && nums[r] == nums[r+1]){
                            r--;
                        }
                    }
                    else if(sum<t){
                        l++;
                    }
                    else{
                        r--;
                    }
                    
                }
                j++;
                while(j<nums.length && nums[j] == nums[j-1]){
                    j++;
                }
            }
            i++;
            while(i<nums.length && nums[i] == nums[i-1]){
                i++;
            }
        }
        return ans;
    }
}
